Constructor:
    Constructor is a block of code that is used to construct objects.
Why we should use Constructor:
    Constructor helps us initialize objects in cleaner and more readable way.
    They are better than methods because they are called automatically when we create an object.
    Most of the time fields are private and because of this reason we can't access them
    outside the class in which they are declared and can't initialize them.
How to use Constructor:
    We create the constructor by writing a block of code that has same name as class name.
    When we create the object of that class it is called automatically.
Rules:
    1) Constructors don't have return types, not even void.
    2) Constructors should have same name as class name.
    3) Constructors can have access modifiers like private, public, and protected.
    4) Constructors can't have non access modifiers like static final synchronized.
    5) Default constructor is provided by Java if we don't write one.
    6) When we create the object of a class, then a Constructor is called. For example,
    if the class name is Dog/ Dog dog1=new Dog();
    7) We can create multiple Constructors to give the other user flexibility that they don't
    have to provide all the values to all the instance fields when creating an object of our class.
    8) we can call the Constructor of a class by using this key word with parenthesis.
    this() we can pass parameters and java will decide based on these parameters which constructor to call.
"this" keyword:
    Whenever we can same name variables as instance variables and local variables, this keyword can
    help us resolve the conflict between local and instance.
class Human{
String name="sleeping zombie";

void printName(){
String name="wake up zombie";

System.out.println(this.name);
}
}